-- DECLARE @MYDATE DATE;
-- SET @MYDATE = /*<POINTER>*/CURRENT_TIMESTAMP/*</POINTER>*/;
-- --------------------------------------------------------------
WITH
ones AS ( 
SELECT * FROM (VALUES (0),(1),(2),(3),(4),(5),(6),(7),(8),(9)) AS numbers(x) 
)
-- --------------------------------------------------------------
,generation_def AS(
SELECT *
FROM (VALUES
	(0, 1824, 'ANCIENT', '01.AC')
	,(1825, 1844, 'EARLY COLONIAL', '02.EC')
	,(1845, 1864, 'MID COLONIAL', '03.MC')
	,(1865, 1884, 'LATE COLONIAL', '04.LC')
	,(1885, 1904, 'HARD TIMERS', '05.HT')
	,(1905, 1924, 'FEDERATION', '06.F')
	,(1925, 1944, 'SILENT', '07.S')
	,(1945, 1964, 'BABY BOOMERS', '08.BB')
	,(1965, 1979, 'GENERATION X', '09.X')
	,(1980, 1994, 'GENERATION Y', '10.Y')
	,(1995, 2009, 'GENERATION Z', '11.Z')
	,(2010, 9999, 'MILLENIALS', '12.M')  ) AS generation(y1,y2,gen,gen_abr) 
)
-- --------------------------------------------------------------
,generation AS (
SELECT CY=n.x, GEN=g.gen, GEN_ABR=g.gen_abr
FROM
	(SELECT x=1000*o1000.x + 100*o100.x + 10*o10.x + o1.x
	FROM ones o1, ones o10, ones o100, ones o1000 ) n
	LEFT JOIN generation_def g on(n.x>=g.y1 AND n.x<=g.y2)
WHERE n.x BETWEEN 1 AND YEAR(CURRENT_TIMESTAMP)
)
-- --------------------------------------------------------------
,cte_contacts AS (
SELECT C1.SERIALNUMBER, C1.CREATED
   , FULLNAME=CONCAT(
      IIF(RTRIM(C1.TITLE)='' OR C1.TITLE IS NULL,'',RTRIM(C1.TITLE)+' ')
      ,IIF(RTRIM(C1.FIRSTNAME)='' OR C1.FIRSTNAME IS NULL,'',RTRIM(C1.FIRSTNAME)+' ')
      ,IIF(RTRIM(C1.OTHERINITIAL)='' OR C1.OTHERINITIAL IS NULL,'',RTRIM(C1.OTHERINITIAL)+' '),C1.KEYNAME)
   , C1.CONTACTTYPE, C1.PRIMARYCATEGORY, C1.SOURCE
   , GENDER=IIF(C1.CONTACTTYPE='Organisation','N/A',IIF(C1.GENDER IS NULL OR RTRIM(C1.GENDER )='Missing',NULL,C1.GENDER ))
   , C1.DATEOFBIRTH
   , AGE=IIF(C1.CONTACTTYPE='Organisation',NULL,IIF(C1.DATEOFBIRTH IS NULL,NULL,(DATEDIFF(day,C1.DATEOFBIRTH,CURRENT_TIMESTAMP)+1)/365))
   , GENERATION=C3.GEN, C3.GEN_ABR
   , C1.ADDRESSLINE1, C1.ADDRESSLINE2, SUBURB=C1.ADDRESSLINE3
   , STATE=IIF(UPPER(LTRIM(RTRIM(C1.ADDRESSLINE4))) IN ('VIC','NSW','SA','QLD','WA','TAS','ACT','NT'),UPPER(LTRIM(RTRIM(C1.ADDRESSLINE4))),'O/S')
   , C1.POSTCODE, C1.COUNTRY, C1.EMAILADDRESS
   , MAJORDONOR=IIF(C1.MAJORDONOR=-1,'YES',NULL)
   , ANONYMOUS=IIF(C1.ANONYMOUS=-1,'YES',NULL)
   , DONOTMAIL=IIF(C1.DONOTMAIL=-1,'YES',NULL)
   , DONOTCALL=IIF(C2.DONOTCALL=-1,'YES',NULL)
   , C1.DONOTMAILREASON, C1.DONOTMAILFROM, C1.DONOTMAILUNTIL
   , MANAGER=CONCAT(
	   IIF(C2.CRMPRIMARYMANAGER IS NULL OR RTRIM(C2.CRMPRIMARYMANAGER)='','','[P]' + C2.CRMPRIMARYMANAGER)
		,IIF(NOT(C2.CRMPRIMARYMANAGER IS NULL OR RTRIM(C2.CRMPRIMARYMANAGER)='') AND NOT(C2.CRMSECONDARYMANAGER IS NULL OR RTRIM(C2.CRMSECONDARYMANAGER)=''),', ','')
		,IIF(C2.CRMSECONDARYMANAGER IS NULL OR RTRIM(C2.CRMSECONDARYMANAGER)='','','[S]'+C2.CRMSECONDARYMANAGER)
		)
FROM
	TBL_CONTACT C1
	LEFT JOIN TBL_CONTACTATTRIBUTE C2 ON (C1.SERIALNUMBER = C2.SERIALNUMBER)
	LEFT JOIN generation C3 ON (YEAR(C1.DATEOFBIRTH) = C3.CY)
WHERE C1.CONTACTTYPE <> 'ADDRESS'
)
-- --------------------------------------------------------------
,cte_sourcecode AS(
SELECT
	SOURCECODE,SOURCETYPE
	,IIF(SOURCETYPE LIKE 'Sponsorship', 'P',IIF(SOURCETYPE LIKE 'Merch%', 'M',IIF(SOURCETYPE LIKE 'Group', 'G',IIF(SOURCETYPE LIKE 'Bequest', 'B'
	,IIF(ADDITIONALCODE3 IS NULL OR RTRIM(ADDITIONALCODE3) = '', 'U','C'))))) AS SOURCECATEGORY
	,ADDITIONALCODE1 AS QBCODE,ADDITIONALCODE5 AS QBCLASS,ADDITIONALCODE3 AS CAMPAIGN
	,DEFAULT_DES1=DESTINATIONCODE,DEFAULT_DES2=DESTINATIONCODE2
	,SOURCEDESCRIPTION,SOURCENOTES
	,ARCHIVE,EXCLUDEFROMDROPDOWN
	,SOURCECODE_CREATEDBY=CREATEDBY,SOURCECODE_CREATED=CREATED
	,SOURCECODE_MODIFIEDBY=MODIFIEDBY,SOURCECODE_MODIFIED=MODIFIED
FROM TBL_SOURCECODE)
-- --------------------------------------------------------------
,cte_payments AS (
SELECT
	B1.SERIALNUMBER,B1.PAYMENTAMOUNT,B2.DATEOFPAYMENT
	,ACTUAL_DES1=B1.DESTINATIONCODE,ACTUAL_DES2=B1.DESTINATIONCODE2
	,B1.SOURCECODE2
	,B6.*
	,FY=IIF(MONTH(B2.DATEOFPAYMENT)<7,YEAR(B2.DATEOFPAYMENT),YEAR(B2.DATEOFPAYMENT)+1)
	,FYMTH=IIF(MONTH(B2.DATEOFPAYMENT)<7,MONTH(B2.DATEOFPAYMENT)+6,MONTH(B2.DATEOFPAYMENT)-6)
	,CY=YEAR(B2.DATEOFPAYMENT),CYMTH=MONTH(B2.DATEOFPAYMENT),DAY=DAY(B2.DATEOFPAYMENT)
	,B4.ADMITNAME,B2.RECEIPTNO,B2.REVERSED,B4.APPROVED,B4.STAGE
	,LAST_PROCESSED=IIF(B1.MODIFIED IS NULL AND B2.MODIFIED IS NULL, B4.MODIFIED, 
		IIF(B1.MODIFIED IS NULL OR B2.MODIFIED IS NULL, ISNULL(B1.MODIFIED,B2.MODIFIED),
			IIF(B1.MODIFIED<B2.MODIFIED,B2.MODIFIED,B1.MODIFIED)))
	,LAST_PROCESSEDBY=IIF(B1.MODIFIED IS NULL AND B2.MODIFIED IS NULL, B4.MODIFIEDBY, 
		IIF(B1.MODIFIED IS NULL OR B2.MODIFIED IS NULL, ISNULL(B1.MODIFIEDBY,B2.MODIFIEDBY),
			IIF(B1.MODIFIED<B2.MODIFIED,B2.MODIFIEDBY,B1.MODIFIEDBY)))
FROM
	TBL_BATCHITEMSPLIT        B1
	LEFT JOIN TBL_BATCHITEM   B2 ON (B1.SERIALNUMBER = B2.SERIALNUMBER) AND (B1.RECEIPTNO = B2.RECEIPTNO) AND (B1.ADMITNAME = B2.ADMITNAME)
	LEFT JOIN TBL_BATCHHEADER B4 ON (B2.ADMITNAME = B4.ADMITNAME)
	LEFT JOIN cte_sourcecode  B6 ON (B1.SOURCECODE = B6.SOURCECODE)
WHERE
	(B2.REVERSED IS NULL OR NOT(B2.REVERSED=1 OR B2.REVERSED=-1)) -- Full reversal and re-entry should be excluded all time
--    AND (B4.STAGE ='Batch Approved')
--    AND CAST(B2.DATEOFPAYMENT AS DATE) <= CAST(@MYDATE AS DATE)
)
-- --------------------------------------------------------------
,cte_contactwithsoft AS (
SELECT
	SN_SOFTEE=B1.SERIALNUMBER
	,SOFT_TOTAL=SUM(B2.PAYMENTAMOUNT), SOFTER_COUNT=COUNT(DISTINCT B2.SERIALNUMBER)
	,SOFT_MINDATEOFPAYMENT=MIN(B2.DATEOFPAYMENT), SOFT_MAXDATEOFPAYMENT=MAX(B2.DATEOFPAYMENT)
FROM
	TBL_BATCHITEMRELATIONSHIP B1
	LEFT JOIN TBL_BATCHITEM B2 ON (B1.RECEIPTNO = B2.RECEIPTNO) AND (B1.ADMITNAME = B2.ADMITNAME)
WHERE B1.DESIGNATION = 'SOFT'
GROUP BY B1.SERIALNUMBER
)
-- --------------------------------------------------------------
,cte_payments_gift AS (
SELECT *
	,TRX_ID=CAST(DENSE_RANK() OVER(PARTITION BY SERIALNUMBER ORDER BY DATEOFPAYMENT ASC, CONCAT(SERIALNUMBER,'-',ADMITNAME,'-',RECEIPTNO) ASC) AS INT)
	,DATE_ID=CAST(DENSE_RANK() OVER(PARTITION BY SERIALNUMBER ORDER BY DATEOFPAYMENT ASC) AS INT)
	,MTH_ID=CAST(DENSE_RANK() OVER(PARTITION BY SERIALNUMBER ORDER BY YEAR(DATEOFPAYMENT)*100+MONTH(DATEOFPAYMENT) ASC) AS INT)
	,FY_ID=CAST(DENSE_RANK() OVER(PARTITION BY SERIALNUMBER ORDER BY IIF(MONTH(DATEOFPAYMENT)<7,YEAR(DATEOFPAYMENT),YEAR(DATEOFPAYMENT)+1) ASC) AS INT)
FROM cte_payments
WHERE (REVERSED IS NULL OR NOT(REVERSED=2)) -- Partial Reversal should not be considered when calculating number of gifts(transactons)
)
-- --------------------------------------------------------------
,cte_donor_total_lfy AS(
SELECT SERIALNUMBER,LFY_TOTAL=SUM(PAYMENTAMOUNT)
FROM cte_payments
WHERE FY = IIF(MONTH(CURRENT_TIMESTAMP)<7,YEAR(CURRENT_TIMESTAMP),YEAR(CURRENT_TIMESTAMP)+1)-1
GROUP BY SERIALNUMBER
)
-- --------------------------------------------------------------
,cte_payment_cy AS (
SELECT
	pmt.*,lfy.LFY_TOTAL
	,FYTYPE=IIF(pmt.FY_ID=1,'NEW',IIF(lfy.LFY_TOTAL<>0,'CON','REC'))
	,PAGENUM=CAST(DENSE_RANK() OVER (ORDER BY CAST(pmt.LAST_PROCESSED AS DATE) DESC) AS INT)
	,CFY_DATE_ID=CAST(DENSE_RANK() OVER(PARTITION BY pmt.SERIALNUMBER ORDER BY pmt.DATEOFPAYMENT ASC) AS INT)
FROM
	cte_payments_gift pmt
	LEFT JOIN cte_donor_total_lfy lfy ON (pmt.SERIALNUMBER = lfy.SERIALNUMBER)
WHERE
	pmt.FY = IIF(MONTH(CURRENT_TIMESTAMP)<7,YEAR(CURRENT_TIMESTAMP),YEAR(CURRENT_TIMESTAMP)+1)
)
-- --------------------------------------------------------------
,cte_tim_payment_selector AS (
SELECT
	LAST_PROCESSED=MAX(cypmt.LAST_PROCESSED)
	,CSD_STAFF=(SELECT TOP 1 csd.LAST_PROCESSEDBY FROM cte_payment_cy csd WHERE csd.SERIALNUMBER=cypmt.SERIALNUMBER ORDER BY csd.LAST_PROCESSED DESC)
	,SN=cypmt.SERIALNUMBER
	,contact.FULLNAME,CFY_TYPE=MAX(cypmt.FYTYPE)
	,CFY_FREQ=IIF(MAX(cypmt.CFY_DATE_ID)=1,'Fist time CFY','Returner: Day '+ CAST(MAX(cypmt.CFY_DATE_ID) AS VARCHAR(3)))
	,LTD_STATUS=IIF(MAX(cypmt.FYTYPE)='NEW'
		,IIF(MAX(cypmt.TRX_ID)=1,'Shining New Donor with their shining 1st Gift'
		,IIF(MAX(cypmt.TRX_ID)>1 AND MAX(cypmt.CFY_DATE_ID)=1,'Enthusiastic New Donor gave '+CAST(MAX(cypmt.TRX_ID) AS VARCHAR(3)) +' Gifts on their 1st Day'
		,'Normal New Donor'))
		,IIF(NOT(MAX(cypmt.TRX_ID)= 2 OR MAX(cypmt.DATE_ID) = 2),'Normal '+ IIF(MAX(cypmt.FYTYPE)='CON','Continuing','Recovered ') +' Donor'
		,IIF(MAX(cypmt.FYTYPE)='REC' AND MAX(cypmt.FY_ID) = 2,'New Donor come back from past with their Gift No.'+CAST(MAX(cypmt.TRX_ID) AS VARCHAR(3))+' on their Day '+  CAST(MAX(cypmt.DATE_ID) AS VARCHAR(3))
		,IIF(MAX(cypmt.FYTYPE)='CON','Continuing','Recovered') +' Donor with their Gift No.'+CAST(MAX(cypmt.TRX_ID) AS VARCHAR(3))+' on their Day '+  CAST(MAX(cypmt.DATE_ID) AS VARCHAR(3))
		)))
	,PAGENUM=CAST(DENSE_RANK() OVER (ORDER BY CAST(MAX(cypmt.LAST_PROCESSED) AS DATE) DESC) AS INT)
FROM 
	cte_payment_cy cypmt
	LEFT JOIN cte_contacts contact ON (cypmt.SERIALNUMBER = contact.SERIALNUMBER)
	LEFT JOIN cte_contactwithsoft soft ON (cypmt.SERIALNUMBER = soft.SN_SOFTEE)
WHERE 
	(FYTYPE= 'NEW' OR FYTYPE= 'REC' OR ( FYTYPE= 'CON' AND (TRX_ID= 2 OR DATE_ID = 2)))
GROUP BY
	cypmt.SERIALNUMBER
	,contact.FULLNAME
)
-- --------------------------------------------------------------

select *
from 
cte_tim_payment_selector t1
left join cte_contacts t2 on (t1.SN=t2.SERIALNUMBER)
-- where 1=1 
-- and PAGENUM=1
-- group by SERIALNUMBER
order by LAST_PROCESSED desc


-- select max(PAGENUM)
-- from cte_tim_payment_selector 
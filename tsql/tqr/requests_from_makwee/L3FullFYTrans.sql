-- use thankQ4_Reporter;
with
-- --------------------------------------------------------------
ones AS (
	SELECT * FROM (VALUES (0), (1), (2), (3), (4),(5), (6), (7), (8), (9)) AS numbers(x)
)
-- --------------------------------------------------------------
,generation_def AS (
   SELECT * FROM (
      VALUES 
      (0,1824,'ANCIENT','01.AC')
      ,(1825,1844,'EARLY COLONIAL','02.EC')
      ,(1845,1864,'MID COLONIAL','03.MC')
      ,(1865,1884,'LATE COLONIAL','04.LC')
      ,(1885,1904,'HARD TIMERS','05.HT')
      ,(1905,1924,'FEDERATION','06.F')
      ,(1925,1944,'SILENT','07.S')
      ,(1945,1964,'BABY BOOMERS','08.BB')
      ,(1965,1979,'GENERATION X','09.X')
      ,(1980,1994,'GENERATION Y','10.Y')
      ,(1995,2009,'GENERATION Z','11.Z')
      ,(2010,9999,'MILLENIALS','12.M')
      ) AS generation(y1,y2,gen,gen_abr) 
)
-- --------------------------------------------------------------
,cte_generation AS(
SELECT cy=n.x,gen=g.gen,gen_abr=g.gen_abr
FROM 
   (SELECT x=1000*o1000.x + 100*o100.x + 10*o10.x + o1.x FROM ones o1, ones o10, ones o100, ones o1000 ) n 
   LEFT JOIN generation_def g on(n.x>=g.y1 AND n.x<=g.y2)
WHERE n.x BETWEEN 1 AND YEAR(CURRENT_TIMESTAMP)
)
-- --------------------------------------------------------------
,cte_clean_contact AS (
SELECT C1.SERIALNUMBER
   ,CONTACT = CONCAT(
      IIF(RTRIM(C1.TITLE)='' OR C1.TITLE IS NULL,'',RTRIM(C1.TITLE)+' ')
      ,IIF(RTRIM(C1.FIRSTNAME)='' OR C1.FIRSTNAME IS NULL,'',RTRIM(C1.FIRSTNAME)+' ')
      ,IIF(RTRIM(C1.OTHERINITIAL)='' OR C1.OTHERINITIAL IS NULL,'',RTRIM(C1.OTHERINITIAL)+' '),C1.KEYNAME)
   ,CONTACTTYPE = IIF(C1.CONTACTTYPE IS NULL OR RTRIM(C1.CONTACTTYPE )='','[DNF]',C1.CONTACTTYPE)
   ,PRIMARYCATEGORY = IIF(C1.PRIMARYCATEGORY IS NULL OR RTRIM(C1.PRIMARYCATEGORY )='','[DNF]',C1.PRIMARYCATEGORY)
   ,CONTACTSOURCE = IIF(C1.SOURCE IS NULL OR RTRIM(C1.SOURCE )='','[DNF]',C1.SOURCE)
   ,GENDER = IIF(C1.CONTACTTYPE='Organisation' AND (C1.GENDER IS NULL OR RTRIM(C1.GENDER )=''),'[N/A]',IIF(C1.GENDER IS NULL OR RTRIM(C1.GENDER )='','[DNF]',C1.GENDER ))
   ,C1.DATEOFBIRTH
   ,AGE = IIF(C1.DATEOFBIRTH IS NULL OR RTRIM(C1.DATEOFBIRTH )='',NULL,(DATEDIFF(day,C1.DATEOFBIRTH,CURRENT_TIMESTAMP)+1)/365)
   ,GENERATION = IIF((C1.DATEOFBIRTH IS NULL OR RTRIM(C1.DATEOFBIRTH)=''),'[DNF]',C3.GEN)
   ,GENERATIONCODE = IIF((C1.DATEOFBIRTH IS NULL OR RTRIM(C1.DATEOFBIRTH)=''),'[DNF]',C3.GEN_ABR)
   ,SUBURB = IIF(C1.ADDRESSLINE3 IS NULL OR RTRIM(C1.ADDRESSLINE3 )='','[DNF]',C1.ADDRESSLINE3)
   ,STATE = IIF(C1.ADDRESSLINE4 IS NULL OR RTRIM(C1.ADDRESSLINE4 )='','[DNF]',C1.ADDRESSLINE4)
   ,STATEAU = IIF(UPPER(LTRIM(RTRIM(C1.ADDRESSLINE4))) IN ('VIC','NSW','SA','QLD','WA','TAS','ACT','NT'),UPPER(LTRIM(RTRIM(C1.ADDRESSLINE4))),IIF(RTRIM(C1.ADDRESSLINE4)='' OR C1.ADDRESSLINE4 IS NULL,'[DNF]','O/S'))
   ,POSTCODE = LTRIM(RTRIM(C1.POSTCODE))
   ,COUNTRY = IIF(C1.COUNTRY IS NULL OR RTRIM(C1.COUNTRY )='','[DNF]',C1.COUNTRY)
   ,EMAIL = IIF(C1.EMAILADDRESS IS NULL OR RTRIM(C1.EMAILADDRESS )='',NULL,C1.EMAILADDRESS)
   ,DECEASED = IIF(C1.DONOTMAILREASON LIKE '%Deceased%','YES',NULL)
   ,DECEASEDDATE = IIF(C1.DONOTMAILREASON LIKE '%Deceased%',C1.DONOTMAILFROM,NULL)
   ,ESTATE = IIF(C1.PRIMARYCATEGORY LIKE '%ESTATE%','YES',NULL)
   ,MAJORDONOR = IIF(C1.MAJORDONOR = -1,'YES',NULL)
   ,ANONYMOUS = IIF(C1.ANONYMOUS=-1,'YES',NULL)
   ,DONOTCALL = IIF(C2.DONOTCALL=-1,'YES',NULL)
   ,DONOTMAIL = IIF(C1.DONOTMAIL=-1,'YES',NULL)
   ,DONOTMAILREASON = IIF(C1.DONOTMAIL=-1,IIF(C1.DONOTMAILREASON IS NULL OR RTRIM(C1.DONOTMAILREASON)='','[DNF]',C1.DONOTMAILREASON),'[N/A]')
   ,C1.CREATED
   ,CREATEDBY = IIF(C1.CREATEDBY IS NULL OR RTRIM(C1.CREATEDBY )='','[DNF]',C1.CREATEDBY)
FROM
   TBL_CONTACT C1
   LEFT JOIN TBL_CONTACTATTRIBUTE C2 ON (C1.SERIALNUMBER = C2.SERIALNUMBER)
   LEFT JOIN cte_generation C3 ON (YEAR(C1.DATEOFBIRTH) = C3.cy)
WHERE C1.CONTACTTYPE <> 'ADDRESS'
)
-- --------------------------------------------------------------
,cte_sourcecode AS(
SELECT 
   SOURCECODE,SOURCETYPE
   ,SOURCECATEGORY = 
      IIF(SOURCETYPE LIKE 'Merch%Pur%' OR SOURCETYPE LIKE 'Merch%Postage%' OR SOURCETYPE LIKE 'Merch%Aux%', 'MP',
         IIF(SOURCETYPE LIKE 'Merch%' AND NOT(SOURCETYPE LIKE 'Merch%Pur%' OR SOURCETYPE LIKE 'Merch%Postage%'), 'MD',
            IIF(SOURCETYPE LIKE 'Bequest', 'BEQ', 'OTHER')))

   ,ADDITIONALCODE1 AS QBCODE,ADDITIONALCODE5 AS QBCLASS,ADDITIONALCODE3 AS CAMPAIGN
   ,DEFAULT_DES1=DESTINATIONCODE,DEFAULT_DES2=DESTINATIONCODE2
   ,ARCHIVE,EXCLUDEFROMDROPDOWN
   ,SOURCEDESCRIPTION,SOURCENOTES
   -- ,SOURCECODE_CREATEDBY=CREATEDBY,SOURCECODE_CREATED=CREATED
   -- ,SOURCECODE_MODIFIEDBY=MODIFIEDBY,SOURCECODE_MODIFIED=MODIFIED
FROM TBL_SOURCECODE)
-- --------------------------------------------------------------
,cte_payments AS (
SELECT
   B1.SERIALNUMBER,B1.PAYMENTAMOUNT,B2.DATEOFPAYMENT
   ,ACTUAL_DES1=B1.DESTINATIONCODE,ACTUAL_DES2=B1.DESTINATIONCODE2
   ,B1.SOURCECODE2
   ,B6.*
   ,FY=IIF(MONTH(B2.DATEOFPAYMENT)<7,YEAR(B2.DATEOFPAYMENT),YEAR(B2.DATEOFPAYMENT)+1)
   ,FYMTH=IIF(MONTH(B2.DATEOFPAYMENT)<7,MONTH(B2.DATEOFPAYMENT)+6,MONTH(B2.DATEOFPAYMENT)-6)
   ,CY=YEAR(B2.DATEOFPAYMENT),CYMTH=MONTH(B2.DATEOFPAYMENT),DAY=DAY(B2.DATEOFPAYMENT)
   ,TRX_ID=CAST(DENSE_RANK() OVER(PARTITION BY B1.SERIALNUMBER ORDER BY B2.DATEOFPAYMENT ASC, CONCAT(B1.SERIALNUMBER,'-',B1.ADMITNAME,'-',B2.RECEIPTNO) ASC) AS INT)
   ,DATE_ID=CAST(DENSE_RANK() OVER(PARTITION BY B1.SERIALNUMBER ORDER BY B2.DATEOFPAYMENT ASC) AS INT)
   ,MTH_ID=CAST(DENSE_RANK() OVER(PARTITION BY B1.SERIALNUMBER ORDER BY YEAR(B2.DATEOFPAYMENT)*100+MONTH(B2.DATEOFPAYMENT) ASC) AS INT)
   ,FY_ID=CAST(DENSE_RANK() OVER(PARTITION BY B1.SERIALNUMBER ORDER BY IIF(MONTH(B2.DATEOFPAYMENT)<7,YEAR(B2.DATEOFPAYMENT),YEAR(B2.DATEOFPAYMENT)+1) ASC) AS INT) 
   ,B4.ADMITNAME,B2.REVERSED
   -- ,B4.APPROVED,B4.STAGE
   -- ,TRX_KEY=CONCAT(B1.SERIALNUMBER,'-',B1.ADMITNAME,'-',B2.RECEIPTNO)
FROM
   TBL_BATCHITEMSPLIT        B1
   LEFT JOIN TBL_BATCHITEM   B2 ON (B1.SERIALNUMBER = B2.SERIALNUMBER) AND (B1.RECEIPTNO = B2.RECEIPTNO) AND (B1.ADMITNAME = B2.ADMITNAME)
   LEFT JOIN TBL_BATCHHEADER B4 ON (B2.ADMITNAME = B4.ADMITNAME)
   LEFT JOIN cte_sourcecode  B6 ON (B1.SOURCECODE = B6.SOURCECODE)
WHERE 
   (B2.REVERSED IS NULL OR NOT(B2.REVERSED=1 OR B2.REVERSED=-1)) AND (B4.STAGE ='Batch Approved')  /*Only Approved Batches and excluding fully reversed Batchitems(like they never exist)*/
   -- AND CAST(B2.DATEOFPAYMENT AS DATE) <= CAST(@MYDATE AS DATE)
)
-- --------------------------------------------------------------
,cte_contact_active_fy AS (

SELECT [SERIALNUMBER]
   ,CONCAT(IIF([2015] IS NOT NULL, 'Y-','N-'),IIF([2016] IS NOT NULL, 'Y-','N-'),IIF([2017] IS NOT NULL, 'Y','N')) AS PATTERN
FROM
   (
   SELECT SERIALNUMBER, FY, SUM(PAYMENTAMOUNT) AS TOTAL
   FROM cte_payments
   WHERE 
      FY BETWEEN (YEAR(CURRENT_TIMESTAMP) + IIF(MONTH(CURRENT_TIMESTAMP)<7,0,1))-3 AND (YEAR(CURRENT_TIMESTAMP) + IIF(MONTH(CURRENT_TIMESTAMP)<7,0,1))
   GROUP BY SERIALNUMBER,FY
      ) DATATABLE
   PIVOT
   (
      SUM(TOTAL)
      FOR FY IN([2015],[2016],[2017])
      ) PIVOTTABLE

)
-- --------------------------------------------------------------
SELECT
   T1.SERIALNUMBER
   ,T2.PATTERN
   ,T1.PAYMENTAMOUNT
   ,T1.DATEOFPAYMENT
   ,T1.SOURCETYPE
   ,T1.SOURCECATEGORY
FROM 
   cte_payments T1
   LEFT JOIN cte_contact_active_fy T2 ON (T1.SERIALNUMBER = T2.SERIALNUMBER)
WHERE
   T1.FY BETWEEN (YEAR(CURRENT_TIMESTAMP) + IIF(MONTH(CURRENT_TIMESTAMP)<7,0,1)) -3 AND (YEAR(CURRENT_TIMESTAMP) + IIF(MONTH(CURRENT_TIMESTAMP)<7,0,1))
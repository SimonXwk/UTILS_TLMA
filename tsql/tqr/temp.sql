with 
cte_mail_porfile as (
  SELECT *
  FROM
  (
    SELECT [SERIALNUMBER], [SERIALNUMBER] AS [SN]
    , CASE WHEN [PARAMETERNAME] = 'Record to Review'
      THEN 'Record to Review'
      ELSE [PARAMETERVALUE]
      END AS [PARAMETERVALUE]
    FROM TBL_CONTACTPARAMETER
    WHERE ([PARAMETERVALUE] IN ('Catalogue All', 'eCatalogue All', 'eMonthly Promo') AND [PARAMETERNAME] = 'Catalogue')
      OR ([PARAMETERVALUE] IN ('No Extra Mail') AND [PARAMETERNAME] = 'Mailings')
  ) D
  PIVOT
  (
    COUNT([SN])
    FOR [PARAMETERVALUE] IN ([Catalogue All], [eCatalogue All], [eMonthly Promo],[No Extra Mail], [Record to Review], [Annual Tax])
  ) P
)
-- ----------------------------------------------------
, cte_generation_definition AS (
  SELECT *
  FROM (
    VALUES
      (DATEFROMPARTS(1000, 1, 1), DATEFROMPARTS(1827, 1, 1), 'ANCIENT', '01.AC')
      ,(DATEFROMPARTS(1827, 1, 1), DATEFROMPARTS(1847, 1, 1), 'EARLY COLONIAL', '02.EC')
      ,(DATEFROMPARTS(1847, 1, 1), DATEFROMPARTS(1867, 1, 1), 'MID COLONIAL', '03.MC')
      ,(DATEFROMPARTS(1867, 1, 1), DATEFROMPARTS(1887, 1, 1), 'LATE COLONIAL', '04.LC')
      ,(DATEFROMPARTS(1887, 1, 1), DATEFROMPARTS(1907, 1, 1), 'HARD TIMERS', '05.HT')
      ,(DATEFROMPARTS(1907, 1, 1), DATEFROMPARTS(1927, 1, 1), 'FEDERATION', '06.F')
      ,(DATEFROMPARTS(1927, 1, 1), DATEFROMPARTS(1947, 1, 1), 'SILENT', '07.S')
      ,(DATEFROMPARTS(1947, 1, 1), DATEFROMPARTS(1967, 1, 1), 'BABY BOOMERS', '08.BB')
      ,(DATEFROMPARTS(1967, 1, 1), DATEFROMPARTS(1987, 1, 1), 'GENERATION X & Y', '09.XY')
      ,(DATEFROMPARTS(1987, 1, 1), DATEFROMPARTS(2007, 1, 1), 'iGENERATION', '10.I')
      ,(DATEFROMPARTS(2007, 1, 1), CAST(DATEADD(d,1,CURRENT_TIMESTAMP) AS DATE), 'POST MILLENIALS', '11.PM')
  ) AS generation (DATE1, DATE2, GENERATION, GENERATION_ABBREVATION)
)
-- ----------------------------------------------------
, cte_contacts AS (
  SELECT
--     RTRIM(C1.SERIALNUMBER) AS [SN]
    C1.SERIALNUMBER AS [SN]
    ,C1.CREATED AS [CONTACT_CREATED]
    ,CONCAT(
      CASE WHEN RTRIM(C1.TITLE)='' OR C1.TITLE IS NULL THEN '' ELSE TRIM(C1.TITLE) + ' ' END,
      CASE WHEN RTRIM(C1.FIRSTNAME)='' OR C1.FIRSTNAME IS NULL THEN '' ELSE TRIM(C1.FIRSTNAME) + ' ' END,
      CASE WHEN RTRIM(C1.OTHERINITIAL)='' OR C1.OTHERINITIAL IS NULL THEN '' ELSE TRIM(C1.OTHERINITIAL) + ' ' END,
      RTRIM(C1.KEYNAME)
    ) AS [CONTACT_FULLNAME]
    , C1.CONTACTTYPE, C1.PRIMARYCATEGORY, C1.SOURCE
    , C1.GENDER
    , C1.DATEOFBIRTH
    , (DATEDIFF(day, C1.DATEOFBIRTH, CURRENT_TIMESTAMP)+1)/365 AS [AGE]
    , CASE WHEN C1.DATEOFBIRTH IS NULL THEN 'No Date of Birth' ELSE C3.GENERATION END AS [GENERATION]
    , CASE WHEN C1.DATEOFBIRTH IS NULL THEN '00.NoDoB' ELSE C3.GENERATION_ABBREVATION END AS [GENERATION_ABBREVATION]
    , C1.ADDRESSLINE1, C1.ADDRESSLINE2, C1.ADDRESSLINE3 AS [SUBURB]
    , UPPER(LTRIM(RTRIM(C1.ADDRESSLINE4))) AS [STATE]
    , CASE WHEN C1.ADDRESSLINE4 IS NULL OR RTRIM(C1.ADDRESSLINE4) = ''
      THEN -- TYPE1 (When State is blank)
        CASE WHEN C1.COUNTRY IS NULL OR RTRIM(C1.COUNTRY) = '' OR ( UPPER(LEFT(LTRIM(C1.COUNTRY), 2)) = 'AU' AND UPPER(LTRIM(RTRIM(C1.COUNTRY))) <> 'AUSTRIA' )
        THEN 'MISSING'
        ELSE 'O/S'
        END
      ELSE
        CASE WHEN UPPER(LTRIM(RTRIM(C1.ADDRESSLINE4))) IN ('VIC','NSW','SA','QLD','WA','TAS','ACT','NT')
        THEN -- TYPE2 (When State is AU)
          CASE WHEN C1.COUNTRY IS NULL OR RTRIM(C1.COUNTRY) = '' OR ( UPPER(LEFT(LTRIM(C1.COUNTRY), 2)) = 'AU' AND UPPER(LTRIM(RTRIM(C1.COUNTRY))) <> 'AUSTRIA' )
          THEN UPPER(LTRIM(RTRIM(C1.ADDRESSLINE4)))
          ELSE 'O/S'
          END
        ELSE -- TYPE3 (When State is Non-AU)
          CASE WHEN C1.COUNTRY IS NULL OR RTRIM(C1.COUNTRY) = '' OR ( UPPER(LEFT(LTRIM(C1.COUNTRY), 2)) <> 'AU' OR UPPER(LTRIM(RTRIM(C1.COUNTRY))) = 'AUSTRIA' )
          THEN 'O/S'
          ELSE 'ERROR'
          END
        END
      END AS [STATECOUNTRY]
    , C1.POSTCODE
    , UPPER(LTRIM(RTRIM(C1.COUNTRY))) AS [COUNTRY]

    , C1.DONOTMAILREASON, C1.DONOTMAILFROM, C1.DONOTMAILUNTIL
    -- Filters
    , CASE WHEN C1.CONTACTTYPE='Organisation' THEN -1 ELSE 0 END AS [FILTER_ORGANISATION]
    , CASE WHEN C1.CONTACTTYPE='Organisation'
      THEN 1
      ELSE
        CASE WHEN C1.GENDER IS NULL OR RTRIM(C1.GENDER) = ''
        THEN 0
        ELSE CASE WHEN UPPER(LTRIM(RTRIM(C1.GENDER))) = 'MALE' THEN -1 ELSE -2 END
        END
      END AS [FILTER_GENDER]
    , CASE WHEN C1.MAJORDONOR = -1 THEN -1 ELSE 0 END AS [FILTER_MAJDONOR]
    , CASE WHEN C1.ANONYMOUS = -1 THEN -1 ELSE 0 END AS [FILTER_ANONYMOUS]
    , CASE WHEN C1.DONOTMAIL = -1 THEN -1 ELSE 0 END AS [FILTER_DONOTMAIL]
    , CASE WHEN C1.DONOTMAIL = -1 AND C1.DONOTMAILREASON LIKE '%DECEASED%' THEN -1 ELSE 0 END AS [FILTER_DECEASED]
    , CASE WHEN C1.PRIMARYCATEGORY LIKE '%estate%' THEN -1 ELSE 0 END AS [FILTER_ESTATE]
    , CASE WHEN C2.DONOTCALL = -1 THEN -1 ELSE 0 END AS [FILTER_DONOTCALL]
    , CASE WHEN RTRIM(C1.EMAILADDRESS) = '' OR C1.EMAILADDRESS IS NULL THEN 0 ELSE -1 END AS [FILTER_EMAIL]
    , CASE WHEN RTRIM(C1.TWITTERHANDLE) = '' OR C1.TWITTERHANDLE IS NULL THEN 0 ELSE -1 END AS [FILTER_TWITTER]
    , CASE WHEN RTRIM(C1.FACEBOOKURL) = '' OR C1.FACEBOOKURL IS NULL THEN 0 ELSE -1 END AS [FILTER_FACEBOOK]
    , CASE WHEN RTRIM(C1.LINKEDINURL) = '' OR C1.LINKEDINURL IS NULL THEN 0 ELSE -1 END AS [FILTER_LINKEDIN]
    , CASE WHEN (C1.MOBILENUMBER IS NOT NULL AND RTRIM(C1.MOBILENUMBER) <> '')
        OR (C1.DAYTELEPHONE IS NOT NULL AND RTRIM(C1.MOBILENUMBER) <> '')
        OR (C1.EVENINGTELEPHONE IS NOT NULL AND RTRIM(C1.MOBILENUMBER) <> '')
      THEN -1 ELSE 0 END AS [FILTER_PHONENUMBER]
  FROM
    TBL_CONTACT C1
    LEFT JOIN TBL_CONTACTATTRIBUTE C2 ON C1.SERIALNUMBER = C2.SERIALNUMBER
    LEFT JOIN cte_generation_definition C3 ON (C1.DATEOFBIRTH >= C3.DATE1 AND C1.DATEOFBIRTH < C3.DATE2 )
  WHERE CONTACTTYPE <> 'ADDRESS'
)
-- ------------------------------------------------------------------
select 
  t1.[FILTER_DONOTMAIL]
  ,t2.* 


from E
  cte_contacts t1 right join cte_mail_porfile t2 on t1.SN = t2.SERIALNUMBER
where 
  t1.[FILTER_DONOTMAIL] = 0 and t2.[Catalogue All] > 0
-- select * from cte_mail_porfile
-- order by SERIALNUMBER

-- select * from cte_contacts
-- order by SN
